package Component::Report;
use utf8;
use strict;
use warnings;

use Exporter qw(import);
our @EXPORT = qw( report );


sub report {
    my ($discord, $channel, $args, $sign) = @_;
    my ($fh, $content);

    my $db      = Component::DBI->new();
    my $cid     = $db->cve_getCVEByChannel($channel);
    my $cve     = $db->cve_get($cid);
    my %storage = %{ $db->cve_getStorage($cve->{'id'}) };

    open $fh, "< :encoding(UTF-8)", "report/word/document.xml.orig" or die "can't open report/word/document.xml.orig: $!";
    $content = do { local $/; <$fh> };
    close $fh or die "can't close report/word/document.xml.orig: $!";
    
    my $date = POSIX::strftime("%a %b %d %H:%M:%S %Y", localtime);
    $content =~ s/CVE-ID/$cve->{'id'}/;
    $content =~ s/CVE-DATE/$date/;
    $content =~ s/CVE-CHANNEL/$channel/;
    $content =~ s/CVE-DESC/$cve->{'desc'}/;
    $content =~ s/CVE-REPORT/$args/ if $args;
    $content =~ s/CVE-SIG/$sign/ if $sign;

    if ($storage{'assign'}) {
        my @assigned = @{ $storage{'assign'} };
        my $assigned = join ', ', map { $_->{'member'}{'nick'} } @assigned;
        $content =~ s/CVE-ASSIGN/$assigned/;

    }

    open $fh, "> :encoding(UTF-8)", "report/word/document.xml" or die "can't open report/word/document.xml: $!";
    print $fh $content;
    close $fh;

    eval {
        chdir "$ENV{HOME}/CVE-Bot/report";
        system "zip -r report.docx _rels/.rels docProps/app.xml docProps/core.xml word/webSettings.xml word/_rels/document.xml.rels word/styles.xml word/settings.xml word/theme/theme1.xml word/document.xml word/fontTable.xml \[Content_Types\].xml";
        chdir "$ENV{HOME}/CVE-Bot/";
    };

    # Delete old report.
    if ($storage{'report'}) {
        $discord->delete_message($channel, $storage{'report'});
    }

    Mojo::IOLoop->timer( 2 =>
        sub {

            my $file = "report/report.docx";
            if (! -f $file ) {
                die "$file doesn't exist.\n";
            };

            $discord->send_file($channel, 
                {
                    content => "Report form for: CVE-$cid",
                    type    => "docx",
                    path    => "$file",
                    name    => "Report_CVE-$cid.docx",
                },

            sub {
                    $storage{'report'} = shift->{'id'};
                    $db->cve_setStorage($cve->{'id'}, \%storage);
                }
            );
        }
    ); 
}

1;
