package Command::Close;
use feature 'say';
use utf8;

use Moo;
use strictures 2;
use Component::DBI;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_Close);

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );
has name                => ( is => 'ro', default => 'Close' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => 'Close' );
has pattern             => ( is => 'ro', default => '^close ?' );
has function            => ( is => 'ro', default => sub { \&cmd_close } );
has usage               => ( is => 'ro', default => '' );

sub cmd_close {
    my ($self, $msg) = @_;

    my $channel = $msg->{'channel_id'};
    my $author = $msg->{'author'};
    my $args = $msg->{'content'};

    my $pattern = $self->pattern;
    $args =~ s/$pattern//i;

    my $discord = $self->discord;
    my $replyto = '<@' . $author->{'id'} . '>';

    my $db  = Component::DBI->new();
    my $cve = $db->cve_getCVEByChannel($channel);

    return if !$cve;

    my %storage = %{ $db->cve_getStorage($cve) };

    return if !$storage{'channel'};

    if (!$storage{'close'}) {
        $discord->send_message($channel, "**ARE YOU SURE YOU WANT TO DO THIS?**\n**IF YOU DO ENTER THE COMMAND AGAIN.**");
        $storage{'close'} = 1;
        $db->cve_setStorage($cve, \%storage);
        
        return;

    } elsif (!$storage{'close'} eq 1) {
        $discord->send_message($channel, "**ARE YOU REALLY SURE?????????????????????????????????????????????????**\n**ENTER THE COMMAND ONE MORE TIME.**");
        $storage{'close'} = 2;
        $db->cve_setStorage($cve, \%storage);
        
        return;
    }

    $db->cve_setStorage($cve, {});
    $db->cve_setStatus($cve, "closed");
    $discord->delete_text_channel($channel);

}

1;
