package Command::Match;
use feature 'say';
use utf8;

use Moo;
use strictures 2;
use namespace::clean;
use Component::DBI;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_match);

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );
has name                => ( is => 'ro', default => 'Match' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => '' );
has pattern             => ( is => 'ro', default => '^match ?' );
has function            => ( is => 'ro', default => sub { \&cmd_match } );
has usage               => ( is => 'ro', default => '' );


sub cmd_match {
    my ($self, $msg) = @_;

    my $discord = $self->discord;
    my $pattern = $self->pattern;
    my $channel = $msg->{'channel_id'};
    my $args    = $msg->{'content'};
       $args    =~ s/$pattern//i;
    my @args    = map { lc $_ } split /\s+/, $args;

    my $db      = Component::DBI->new();
    my %storage = %{ $db->getStorage };

    return unless $#args > 0 || $args[0] =~ /^l(?:ist)?$/;

    my $match = join ' ', map { sanitize($_) } splice @args, 1;

    if ($args[0] =~ /^a(?:dd)?$/) {

        if (exists $storage{$match}) {
            $discord->send_message($channel, "Match: '$match' already exists for matching.");

        } else {
            $storage{$match} = 1;
            $db->setStorage(\%storage);
            $discord->send_message($channel, "Match: '$match' added for string matching.");
        }
    }

    if ($args[0] =~ /^del(?:ete)?$/) {

        if (exists $storage{$match}) {

            delete $storage{$match};
            $db->setStorage(\%storage);
            $discord->send_message($channel, "Match: '$match' removed from matching.");
        } else {
            $discord->send_message($channel, "Match: '$match' does not exist for matching.");
        }
    }

    if ($args[0] =~ /^l(?:ist)?$/) {

        if (keys %storage) {
            $discord->send_message($channel, "Currently matching: " . join ', ', sort keys %storage);
        } else {
            $discord->send_message($channel, "Not currently matching anything.");
        }
    }

}


sub sanitize {
    my $t = shift;
    $t =~ s/[^\w\s\-]//g;

    return $t;
}

1;
