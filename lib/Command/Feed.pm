package Command::Feed;

use feature 'say';
use utf8;
use Moo;
use strictures 2;
use namespace::clean;
use LWP::UserAgent;
use Component::DBI;
use POSIX qw(strftime);
use XML::Simple;
use HTML::Entities;
use Data::Dumper;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_feed);

my $config = Config::Tiny->read('config.ini', 'utf8');

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );

has name                => ( is => 'ro', default => 'Feed' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => 'Downloads feeds, does stuff' );
has pattern             => ( is => 'ro', default => '^feed ?' );
has function            => ( is => 'ro', default => sub { \&cmd_feed } );
has usage               => ( is => 'ro', default => "Usage: !feed" );
has timer_seconds       => ( is => 'ro', default => $config->{'cvebot'}{'feedupdate'} );

has timer_sub           => ( is => 'ro',    default => sub 
    { 
        my $self = shift;
        Mojo::IOLoop->recurring($self->timer_seconds => sub {$self->up_feed; }
        ) 
    }
);


sub cmd_feed {
    my ($self, $msg) = @_;

    my $discord = $self->discord;

    my $channel = $msg->{'channel_id'};
    my $author  = $msg->{'author'};
    my $pattern = $self->pattern;
    my $args    = $msg->{'content'};
    $args       =~ s/$pattern//i;
    my $replyto = '<@' . $author->{'id'} . '>';

    if ($args =~ /^update$/) {
        $discord->send_message($channel, "$replyto updating CVE feed.");
        up_feed($self);
    }

    my $db = Component::DBI->new($self);
}

sub up_feed {
    print localtime(time) . " CVE: Updating feed.\n";
    
    my $self    = shift;
    my $discord = $self->discord;
    my $db = Component::DBI->new();

    my $res = LWP::UserAgent->new->get($config->{'cvebot'}{'feedurl'});
    my $xml = XMLin($res->content);

    for my $item (@{ $xml->{item} }) {
        my ($id, $desc, $link, $date) = ($item->{'title'}, $item->{'description'}, $item->{'link'}, $item->{'dc:date'});
           $id =~ s/^CVE-//;

        if ( ! $db->cve_get($id) ) {

            my %storage = %{ $db->getStorage };
            my $matched;

            for my $search (keys %storage) {
                my @string = split /\s+/, $search;
                my $i = 0;

                for (@string) {
                    ++$i if $desc =~ /$_/i
                }            

                if (scalar @string == $i) {
                    $matched = $search;
                    last;
                }
            }


            $desc = decode_entities($desc);

            $db->cve_add($id, $desc, $link, $matched ? 'matched' : 'unmatched',
                {
                    date => $date,
                }
            );

            my $ourDate = strftime("%a %b %d %H:%M:%S %Y", localtime);
            #$discord->send_message($config->{'cvebot'}{'cve-feed'}, "CVE $id - $ourDate\n$desc\n$link\n");
            $discord->send_message($config->{'cvebot'}{'cve-feed'}, 
                {
                    'components' => [
                        {
                            'type' => 1,
                            'components' => [
                                {
                                    'style'   => 5,
                                    'label'   => 'CVE@NIST',
                                    'url'     => $link,
                                    'disabled'=> 'false',
                                    'type'    => 2
                                },
                                {
                                    'style'   => 5,
                                    'label'   => 'CVE@CVE Details',
                                    'url'     => "https://www.cvedetails.com/cve/CVE-$id",
                                    'disabled'=> 'false',
                                    'type'    => 2
                                }
                            ]
                        }
                    ],   
                    'embeds' => [ 
                        {   
                            'author' => {
                                'name'     => 'National Vulnerability Database',
                                'url'      => 'https://nvd.nist.gov/',
                                'icon_url' => 'https://cve.mitre.org/images/cvelogobanner.png',
                            },
                            'title'       => "CVE $id",
                            'description' => "$ourDate\n\n$desc",
                            'url'         => $link,
                            'color'       => 15618821,
                        } 
                    ]
                },
            );            

            if ($matched) {
                #$discord->send_message($config->{'cvebot'}{'cve-alerts'}, "CVE $id - $ourDate - Matched: $matched\n$desc\n$link\nhttps://www.cvedetails.com/cve/CVE-$id\n");
                $discord->send_message($config->{'cvebot'}{'cve-alerts'}, 
                    { 
                        'components' => [
                            {
                                'type' => 1,
                                'components' => [
                                    {
                                        'style'   => 5,
                                        'label'   => 'CVE@NIST',
                                        'url'     => $link,
                                        'disabled'=> 'false',
                                        'type'    => 2
                                    },
                                    {
                                        'style'   => 5,
                                        'label'   => 'CVE@CVE Details',
                                        'url'     => "https://www.cvedetails.com/cve/CVE-$id",
                                        'disabled'=> 'false',
                                        'type'    => 2
                                    }
                                ]
                            }
                        ],   
                        'embeds' => [ 
                            {   
                                'author' => {
                                    'name'     => 'National Vulnerability Database',
                                    'url'      => 'https://nvd.nist.gov/',
                                    'icon_url' => 'https://cve.mitre.org/images/cvelogobanner.png',
                                },
                                'title'       => "CVE $id",
                                'description' => "$ourDate\n\n$desc",
                                'url'         => $link,
                                'color'       => 16711680,

                                'fields' => [
                                    {
                                        'name'  => 'Matched:',
                                        'value' => $matched,
                                    },
                                ],
                            } 
                        ]
                    },
                );            
            }
        } else {
            
        }
    }


}

1;
