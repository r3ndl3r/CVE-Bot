package Command::Voice;
use feature 'say';
use utf8;

use Moo;
use strictures 2;
use Component::DBI;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_voice);

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );
has name                => ( is => 'ro', default => 'Voice' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => 'Voice' );
has pattern             => ( is => 'ro', default => '^voice ?' );
has function            => ( is => 'ro', default => sub { \&cmd_voice } );
has usage               => ( is => 'ro', default => '' );

sub cmd_voice {
    my ($self, $msg) = @_;

    my $channel = $msg->{'channel_id'};
    my $author = $msg->{'author'};
    my $args = $msg->{'content'};

    my $pattern = $self->pattern;
    $args =~ s/$pattern//i;

    my $discord = $self->discord;
    my $replyto = '<@' . $author->{'id'} . '>';

    my $db  = Component::DBI->new();
    my $cve = $db->cve_getCVEByChannel($channel);

    if ($cve) {        
        my $config = $self->bot->config->{'cvebot'};
        $discord->create_voice_channel($msg->{'guild_id'}, "CVE-$cve", $config->{'voice'});
        $discord->send_message($channel, "Voice channel created: CVE-$cve.");
    } else {
        $discord->send_message($channel, "This command can only be used in a CVE 'open' channel.");
    }
    
}

1;
