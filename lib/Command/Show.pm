package Command::Show;
use feature 'say';
use utf8;

use Moo;
use strictures 2;
use Component::DBI;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_show);

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );
has name                => ( is => 'ro', default => 'show' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => 'Show' );
has pattern             => ( is => 'ro', default => '^show ?' );
has function            => ( is => 'ro', default => sub { \&cmd_show } );
has usage               => ( is => 'ro', default => '' );

sub cmd_show {
    my ($self, $msg) = @_;

    my $discord = $self->discord;
    my $channel = $msg->{'channel_id'};
    my $pattern = $self->pattern;
    my $args    = $msg->{'content'};
       $args    =~ s/$pattern//i;

    my $db = Component::DBI->new();

    if ($args =~ /^[\d\-]+$/) {
        my $cve = $db->cve_get($args);
        return if !$cve;

        my @msg = $cve ?
                    "CVE-$cve->{id} - STATUS [ $cve->{'status'} ]\n\n$cve->{'desc'}\n\n$cve->{'link'}\n\n"
                    :
                    "CVE-$args does not exist.";

        my %storage = %{ $db->cve_getStorage($args) };
        
        if ($storage{'assign'}) {
            my @assigned = map { "<\@$_->{id}>" } @{ $storage{'assign'} };
            push @msg, "This CVE has been assigned to: " . join ' ', @assigned;

        }

        $discord->send_message($channel, join '', @msg);

    }
}

1;
