package Command::Report;
use feature 'say';
use utf8;

use Moo;
use strictures 2;
use Component::DBI;
use Component::Report;

use Exporter qw(import);
our @EXPORT_OK = qw(cmd_report);

has bot                 => ( is => 'ro' );
has discord             => ( is => 'lazy', builder => sub { shift->bot->discord } );
has log                 => ( is => 'lazy', builder => sub { shift->bot->log } );
has name                => ( is => 'ro', default => 'Report' );
has access              => ( is => 'ro', default => 0 );
has description         => ( is => 'ro', default => 'Report' );
has pattern             => ( is => 'ro', default => '^report ?' );
has function            => ( is => 'ro', default => sub { \&cmd_report } );
has usage               => ( is => 'ro', default => '' );

sub cmd_report {
    my ($self, $msg) = @_;

    my $discord = $self->discord;
    my $pattern = $self->pattern;
    my $channel = $msg->{'channel_id'};
    my $args    = $msg->{'content'};
       $args    =~ s/$pattern//i;

    my $db  = Component::DBI->new();
    my $cid = $db->cve_getCVEByChannel($channel);
    my $cve = $db->cve_get($cid);

    if ($args && $cve) {
        report($discord, $channel, $args);
    }        
}

1;
